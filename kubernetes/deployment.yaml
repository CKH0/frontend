apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend-deployment
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - image: gcr.io/pxlblue/frontend
          imagePullPolicy: Always
          name: frontend
          ports:
            - containerPort: 80
              protocol: TCP

---
apiVersion: "v1"
kind: "Service"
metadata:
  name: frontend-deployment-service
  namespace: default
  labels:
    app: frontend
spec:
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 80
  selector:
    app: "frontend"
  type: "NodePort"
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: frontend-ingressroute
  namespace: default
spec:
  entryPoints:
    - web
  routes:
    - match: (Host(`pxl.blue`) || Host(`www.pxl.blue`)) && PathPrefix(`/`)
      kind: Rule
      services:
        - name: frontend-deployment-service
          port: 80
      middlewares:
        - name: circuit-breaker
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: frontend-ingressroute-tls
  namespace: default
spec:
  entryPoints:
    - websecure
  routes:
    - match: (Host(`pxl.blue`) || Host(`www.pxl.blue`)) && PathPrefix(`/`)
      kind: Rule
      services:
        - name: frontend-deployment-service
          port: 80
      middlewares:
        - name: circuit-breaker
  tls:
    secretName: backend-secret-tls
